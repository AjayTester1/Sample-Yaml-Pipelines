trigger: none
stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      name: niadak
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - script: |
        echo Add other tasks to build, test, and deploy your project $(system.accesstoken)
        echo See https://aka.ms/yaml
      displayName: 'Run a multi-line script'

    - powershell: |
        $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=4.1-preview"
        Write-Host "URL: $url"
        $pipeline = Invoke-RestMethod -Uri $url -Headers @{
          Authorization = "Bearer $env:TOKEN"
        }
        Write-Host "Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"
      env:
        TOKEN: $(system.accesstoken)

- stage: Deploy
  displayName: Deploy stage
  jobs:  
  - deployment: Deploy
    displayName: Deploy job
    environment: NiadakEnvironment01
    variables:
      SYSTEM_ACCESSTOKEN: $(system.accesstoken)
    strategy:
        runOnce:
          deploy:
            steps:
            - powershell: |
                $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/build/definitions/$($env:SYSTEM_DEFINITIONID)?api-version=4.1-preview"
                Write-Host "URL: $url"
                $pipeline = Invoke-RestMethod -Uri $url -Headers @{
                  Authorization = "Bearer $(SYSTEM_ACCESSTOKEN)"
                }
                Write-Host "ABC is $env:ABC XYZ is $env:XYZ Pipeline = $($pipeline | ConvertTo-Json -Depth 100)"

